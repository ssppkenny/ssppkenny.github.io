{"version":3,"sources":["pz15/subs.cljs"],"mappings":";AAMA,2DAAA,3DAACA,oLAEA,WAAKC;AAAL,AACE,OAAA,mFAAOA;;AAEV,2DAAA,3DAACD,mMAEA,WAAKC,GAAGC;AAAR,AACE,yDAAA,mFAAA,yFAAA,9NAACC,+CAAOF;;AAEX,2DAAA,3DAACD,wLAEA,WAAKC;AAAL,AACE,OAAA,yFAAUA;;AAEb,2DAAA,3DAACD,oMAEA,WAAKC;AAAL,AACE,OAAA,qGAAgBA;;AAEnB,2DAAA,3DAACD,2LAEA,WAAKC;AAAL,AACE,OAAA,4FAAWA;;AAEd,2DAAA,3DAACD,qLAEA,WAAKC;AAAL,AACE,OAAA,sFAAQA;;AAEX,2DAAA,3DAACD,gNAEA,WAAKC,GAAGC;AAAR,AACE,OAAA,+GAAqBD","names":["re_frame.core.reg_sub","db","_","cljs.core.get_in"],"sourcesContent":["(ns pz15.subs\n  (:require\n   [re-frame.core :as re-frame]\n   [re-pressed.core :as rp]\n   ))\n\n(re-frame/reg-sub\n ::name\n (fn [db]\n   (:name db)))\n\n(re-frame/reg-sub\n ::keydown-keys\n (fn [db _]\n   (get-in db [:re-pressed.core/keydown :keys])))\n\n(re-frame/reg-sub\n ::solving\n (fn [db]\n   (:solving db)))\n\n(re-frame/reg-sub\n ::need-to-solve\n (fn [db]\n   (:need-to-solve db)))\n\n(re-frame/reg-sub\n ::solution\n (fn [db]\n   (:solution db)))\n\n(re-frame/reg-sub\n ::state\n (fn [db]\n   (:state db)))\n\n(re-frame/reg-sub\n ::re-pressed-example\n (fn [db _]\n   (:re-pressed-example db)))\n"]}